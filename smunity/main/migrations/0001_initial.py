<<<<<<< HEAD
# Generated by Django 3.1.7 on 2021-03-27 23:36
=======
# Generated by Django 3.1.2 on 2021-03-27 20:13
>>>>>>> 979321a9a1fbddf61864e1479d8b3abdc90f6eaa

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dob', models.DateField(max_length=8, null=True)),
                ('city', models.CharField(max_length=50)),
<<<<<<< HEAD
                ('profile_picture', models.ImageField(blank=True, default='defaultprofile.jpeg', null=True, upload_to=main.models.upload_user_image)),
=======
                ('profile_picture', models.ImageField(upload_to=main.models.upload_user_image)),
>>>>>>> 979321a9a1fbddf61864e1479d8b3abdc90f6eaa
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('city', models.CharField(max_length=50, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('image', models.ImageField(upload_to=main.models.upload_smunity_image)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.category')),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=500)),
                ('image', models.ImageField(upload_to='interests/')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('starting_datetime', models.DateTimeField()),
                ('topic', models.CharField(max_length=100)),
                ('timealloted', models.IntegerField()),
<<<<<<< HEAD
                ('speaker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
=======
                ('speaker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
>>>>>>> 979321a9a1fbddf61864e1479d8b3abdc90f6eaa
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('agenda', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('event_date', models.DateField()),
                ('tagline', models.CharField(max_length=200)),
                ('mode', models.CharField(choices=[('phy', 'Physical'), ('on', 'Online')], max_length=3)),
                ('external_link', models.CharField(max_length=100)),
<<<<<<< HEAD
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.community')),
=======
                ('organizer', models.ManyToManyField(to='main.Community')),
>>>>>>> 979321a9a1fbddf61864e1479d8b3abdc90f6eaa
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='interest',
<<<<<<< HEAD
            field=models.ManyToManyField(blank=True, null=True, to='main.Interest'),
=======
            field=models.ManyToManyField(to='main.Interest'),
>>>>>>> 979321a9a1fbddf61864e1479d8b3abdc90f6eaa
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
